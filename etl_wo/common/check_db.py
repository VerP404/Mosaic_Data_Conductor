from sqlalchemy import text
from etl_wo.common.connect_db import connect_to_db
from etl_wo.config.config import DATABASES


def check_db(context, organization='default', db_alias='default', tables=None):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –Ω–∞–ª–∏—á–∏–µ –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.
    –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ context.log.info().

    :param context: Dagster context –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    :param organization: –ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–∂–æ–±—ã)
    :param db_alias: –ö–ª—é—á –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ DATABASES (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 'default')
    :param tables: –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω)
    :return: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ–≤–µ—Ä–∫–µ
    """
    if not tables:
        message = "‚ùå –°–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –∑–∞–¥–∞–Ω."
        context.log.info(message)
        raise ValueError(message)

    if db_alias not in DATABASES:
        message = f"‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –±–∞–∑—ã '{db_alias}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        context.log.info(message)
        raise ValueError(message)

    db_config = DATABASES[db_alias]
    engine, conn = connect_to_db(db_alias, organization=organization, context=context)

    try:
        with engine.connect() as connection:
            for table in tables:
                try:
                    result = connection.execute(text(f"SELECT COUNT(*) FROM {table}")).scalar()
                    message = f"üìã –¢–∞–±–ª–∏—Ü–∞ '{table}': {result} —Å—Ç—Ä–æ–∫"
                    context.log.info(message)
                except Exception as e:
                    message = f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã '{table}': {e}"
                    context.log.info(message)
    finally:
        conn.close()

    message = f"üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: {', '.join(tables)}"
    context.log.info(message)
    return {"db_alias": db_alias, "organization": organization, "tables": tables}
