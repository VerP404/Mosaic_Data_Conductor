import os
import time
import json
import fnmatch
from dagster import sensor, RunRequest, SkipReason

from etl_wo.jobs.eln import job_eln
from etl_wo.jobs.eln.flow_config import DATA_FOLDER, MAPPING_FILE, TABLE_NAME

# –ü–æ—Ä–æ–≥ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ —Ñ–∞–π–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)
MIN_FILE_AGE_SECONDS = 60


@sensor(job=job_eln)
def eln_folder_monitor_sensor(context):
    """
    –°–µ–Ω—Å–æ—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø–∞–ø–∫–∏ DATA_FOLDER.

    1. –ó–∞–≥—Ä—É–∂–∞–µ—Ç mapping.json –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ file_pattern –∏ file_format –¥–ª—è TABLE_NAME.
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ DATA_FOLDER.
    3. –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –º–µ–Ω—è–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ MIN_FILE_AGE_SECONDS.
    4. –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —à–∞–±–ª–æ–Ω—É ‚Äì —É–¥–∞–ª—è–µ—Ç –µ–≥–æ.
    5. –ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç –∑–∞–ø—É—Å–∫ –¥–∂–æ–±—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ mapping.json
    if not os.path.exists(MAPPING_FILE):
        context.log.info(f"‚ùå –§–∞–π–ª –º–∞–ø–ø–∏–Ω–≥–∞ {MAPPING_FILE} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return SkipReason("Mapping file not found.")

    with open(MAPPING_FILE, "r", encoding="utf-8") as f:
        mapping = json.load(f)

    table_config = mapping.get("tables", {}).get(TABLE_NAME)
    if not table_config:
        context.log.info(f"‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã '{TABLE_NAME}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {MAPPING_FILE}.")
        return SkipReason("Mapping config for table not found.")

    file_pattern = table_config.get("file", {}).get("file_pattern", "")
    file_format = table_config.get("file", {}).get("file_format", "")
    # –°–æ–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω –≤–∏–¥–∞ "pattern.format" (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–õ–ù_*.csv")
    valid_pattern = f"{file_pattern}.{file_format}"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏
    if not os.path.exists(DATA_FOLDER):
        context.log.info(f"‚ùå –ü–∞–ø–∫–∞ {DATA_FOLDER} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return SkipReason("Data folder not found.")

    files = os.listdir(DATA_FOLDER)
    if not files:
        context.log.info("üìÇ –ü–∞–ø–∫–∞ DATA_FOLDER –ø—É—Å—Ç–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–∏–∫.")
        return SkipReason("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ.")

    valid_files = []
    invalid_files = []
    now = time.time()

    for file in files:
        file_path = os.path.join(DATA_FOLDER, file)
        if fnmatch.fnmatch(file, valid_pattern):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –Ω–µ –º–µ–Ω—è–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ MIN_FILE_AGE_SECONDS
            mod_time = os.path.getmtime(file_path)
            age = now - mod_time
            if age >= MIN_FILE_AGE_SECONDS:
                valid_files.append(file)
            else:
                context.log.info(f"–§–∞–π–ª {file} –µ—â–µ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω (–≤–æ–∑—Ä–∞—Å—Ç {age:.0f} —Å–µ–∫.).")
        else:
            invalid_files.append(file)

    # –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ñ–∞–π–ª—ã
    for file in invalid_files:
        file_path = os.path.join(DATA_FOLDER, file)
        try:
            os.remove(file_path)
            context.log.info(f"–£–¥–∞–ª—ë–Ω –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ñ–∞–π–ª: {file_path}")
        except Exception as e:
            context.log.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path}: {e}")

    if valid_files:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ñ–∞–π–ª–∞ –≤ —Å–ø–∏—Å–∫–µ –∫–∞–∫ run_key, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
        run_key = valid_files[-1]
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –¥–∂–æ–±—ã, –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ –æ–ø–µ—Ä–∞—Ü–∏—é eln_extract
        run_config = {
            "ops": {
                "eln_extract": {
                    "config": {
                        "data_folder": DATA_FOLDER,
                        "mapping_file": MAPPING_FILE,
                        "table_name": TABLE_NAME,
                    }
                }
            }
        }
        context.log.info(f"–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —Ñ–∞–π–ª–∞: {run_key}")
        return RunRequest(run_key=run_key, run_config=run_config)
    else:
        context.log.info("–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        return SkipReason("–ù–µ—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.")
