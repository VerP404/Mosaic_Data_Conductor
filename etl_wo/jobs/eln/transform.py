import os
import json
import pandas as pd
from dagster import asset, OpExecutionContext


@asset
def sick_leave_transform(context: OpExecutionContext, sick_leave_extract: dict) -> dict:
    """
    –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã load_data_sick_leave_sheets.
    - –ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∞–ø–ø–∏–Ω–≥ –∫–æ–ª–æ–Ω–æ–∫ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –∏–∑ mapping.json.
    - –î–æ–±–∞–≤–ª—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º "-".
    """
    table_key = sick_leave_extract.get("table_name", "load_data_sick_leave_sheets")
    df = sick_leave_extract.get("data", None)
    if df is None:
        error_msg = f"‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {table_key}."
        context.log.info(error_msg)
        raise ValueError(error_msg)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∞–ø–ø–∏–Ω–≥–∞ –∏–∑ mapping.json
    mapping_path = os.path.join("etl_wo", "config", "mapping.json")
    with open(mapping_path, "r", encoding="utf-8") as f:
        mappings = json.load(f)

    table_config = mappings["tables"].get(table_key, {})
    column_mapping = table_config.get("mapping_fields", {})


    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã —Å–æ–≥–ª–∞—Å–Ω–æ –º–∞–ø–ø–∏–Ω–≥—É
    df = df.rename(columns=column_mapping)

    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –ø–æ–ª–µ "number" –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ NaN
    df = df.dropna(subset=["number"])

    # –£–¥–∞–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã, –∏–º–µ–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å "Unnamed"
    df = df.loc[:, ~df.columns.str.startswith("Unnamed")]

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∏ —É–∫–∞–∑–∞–Ω—ã –≤ –º–∞–ø–ø–∏–Ω–≥–µ
    mapped_columns = list(column_mapping.values())
    for col in mapped_columns:
        if col not in df.columns:
            df[col] = "-"

    text_value = f"üîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è {table_key} –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(df)}"
    context.log.info(text_value)
    return {"table_name": table_key, "data": df}
